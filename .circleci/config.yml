version: 2.1

orbs:
  hmpps: ministryofjustice/hmpps@9
  codecov: codecov/codecov@3

parameters:
  alerts-slack-channel:
    type: string
    default: move-and-improve-alerts-non-prod
  releases-slack-channel:
    type: string
    default: move-and-improve-alerts-non-prod

jobs:
  validate:
    executor:
      name: hmpps/java_localstack_postgres
      jdk_tag: "21.0"
      localstack_tag: "3"
      services: ""
      postgres_tag: "16"
      postgres_username: "root"
      postgres_password: "dev"
    steps:
      - checkout
      - restore_cache:
          keys:
            - gradle-{{ checksum "build.gradle.kts" }}
            - gradle-
      - run:
          command: ./gradlew check
      - codecov/upload:
          file: build/reports/jacoco/test/jacocoTestReport.xml
      - save_cache:
          paths:
            - ~/.gradle
          key: gradle-{{ checksum "build.gradle.kts" }}
      - store_test_results:
          path: build/test-results
      - store_artifacts:
          path: build/reports/tests
      - store_artifacts:
          path: build/reports/jacoco
  database_schema_report:
    parameters:
      jdk_tag:
        type: string
        default: "21.0"
      localstack_tag:
        type: string
        default: "3.0"
      postgres_tag:
        type: string
        default: "16.1"
      initialise_database:
        type: string
        default: "./gradlew check"
        description: A command which will initialise the database schema
      database_name:
        type: string
        default: "postgres"
        description: Name of the database
      host:
        type: string
        default: "localhost"
        description: Host name of the database
      port:
        type: integer
        default: 5432
        description: Port number of the database
      schema:
        type: string
        default: "public"
        description: Schema name
      user:
        type: string
        default: "root"
        description: Database user name
      password:
        type: string
        default: "dev"
        description: Database password
      exclude:
        type: string
        default: "flyway_schema_history"
        description: Regex of tables to be excluded
      schemaspy_version:
        type: string
        default: "6.2.4"
        description: Schemaspy version
      postgres_driver_version:
        type: string
        default: "42.7.3"
        description: Postgres driver version

    executor:
      name: hmpps/java_localstack_postgres_with_db_name
      jdk_tag: << parameters.jdk_tag >>
      localstack_tag: << parameters.localstack_tag >>
      postgres_tag: << parameters.postgres_tag >>
      postgres_db: << parameters.database_name >>
      postgres_username: << parameters.user >>
      postgres_password: << parameters.password >>
      postgres_port: << parameters.port >>

    steps:
      - checkout
      - run:
          name: Install schemaspy
          command: curl -L https://github.com/schemaspy/schemaspy/releases/download/v<< parameters.schemaspy_version >>/schemaspy-<< parameters.schemaspy_version >>.jar --output /tmp/schemaspy.jar
      - run:
          name: Install postgres jdbc driver
          command: curl -L https://jdbc.postgresql.org/download/postgresql-<< parameters.postgres_driver_version >>.jar --output /tmp/postgres-driver.jar
      - run:
          name: Execute a command to initialise the database schema
          command: << parameters.initialise_database >>
      - run:
          name: Generate database schema report
          command: |
            java -jar /tmp/schemaspy.jar \
              -t pgsql \
              -dp /tmp/postgres-driver.jar \
              -db  << parameters.database_name >> \
              -host << parameters.host >> \
              -port << parameters.port >> \
              -s << parameters.schema >> \
              -vizjs \
              -u << parameters.user >> \
              -p << parameters.password >> \
              -I << parameters.exclude >> \
              -o /tmp/schemaspy
      - run:
          name: generate index file
          command: |
            echo '<html><head><meta http-equiv="refresh" content="0; url=report/index.html" /></head><body><a href="report/index.html">Open Schema Report</a></body></html>' > /tmp/index.html
      - store_artifacts:
          path: /tmp/index.html
          destination: schema/index.html
      - store_artifacts:
          path: /tmp/schemaspy
          destination: schema/report

workflows:
  version: 2
  build-test-and-deploy:
    jobs:
      - validate:
          filters:
            tags:
              ignore: /.*/
      - hmpps/helm_lint:
          name: helm_lint
      - database_schema_report:
          initialise_database: "./gradlew initialiseDatabase"
      - hmpps/build_multiplatform_docker:
          name: build_docker
          filters:
            branches:
              only:
                - main
      - hmpps/deploy_env:
          name: deploy_dev
          env: "dev"
          jira_update: true
          pipeline_id: <<pipeline.id>>
          pipeline_number: <<pipeline.number>>
          context: hmpps-common-vars
          filters:
            branches:
              only:
                - main
          requires:
            - validate
            - build_docker
            - helm_lint
          helm_timeout: 5m
      - request-preprod-approval:
          type: approval
          requires:
            - deploy_dev
      - hmpps/deploy_env:
          name: deploy_preprod
          env: "preprod"
          jira_update: true
          jira_env_type: staging
          pipeline_id: <<pipeline.id>>
          pipeline_number: <<pipeline.number>>
          context:
            - hmpps-common-vars
            - hmpps-challenge-support-intervention-plan-preprod
          requires:
            - request-preprod-approval
          helm_timeout: 5m
      - request-prod-approval:
          type: approval
          requires:
            - deploy_preprod
      - hmpps/deploy_env:
          name: deploy_prod
          env: "prod"
          jira_update: true
          jira_env_type: production
          pipeline_id: <<pipeline.id>>
          pipeline_number: <<pipeline.number>>
          slack_notification: true
          slack_channel_name: move-and-improve-alerts
          context:
            - hmpps-common-vars
            - hmpps-challenge-support-intervention-plan-prod
          requires:
            - request-prod-approval
          helm_timeout: 5m

  security:
    triggers:
      - schedule:
          cron: "41 7 * * 1-5"
          filters:
            branches:
              only:
                - main
    jobs:
      - hmpps/gradle_owasp_dependency_check:
          cache_key: "v2_0"
          jdk_tag: "21.0"
          slack_channel: << pipeline.parameters.alerts-slack-channel >>
          context:
            - hmpps-common-vars
      - hmpps/trivy_latest_scan:
          slack_channel: << pipeline.parameters.alerts-slack-channel >>
          context:
            - hmpps-common-vars
      - hmpps/veracode_pipeline_scan:
          jdk_tag: "21.0"
          slack_channel: << pipeline.parameters.alerts-slack-channel >>
          context:
            - veracode-credentials
            - hmpps-common-vars
  security-weekly:
    triggers:
      - schedule:
          cron: "2 7 * * 1"
          filters:
            branches:
              only:
                - main
    jobs:
      - hmpps/veracode_policy_scan:
          slack_channel: << pipeline.parameters.alerts-slack-channel >>
          context:
            - veracode-credentials
            - hmpps-common-vars
